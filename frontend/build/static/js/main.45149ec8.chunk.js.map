{"version":3,"sources":["components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","this","toggle","onSave","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","title","onChange","placeholder","description","check","completed","ModalFooter","Button","color","onClick","Component","App","viewCompleted","todoList","refreshList","axios","get","then","res","data","catch","err","console","log","modal","handleSubmit","item","id","put","post","createItem","displayCompleted","status","editItem","handleDelete","delete","renderTabList","className","renderItems","filter","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45149ec8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n    Button, Modal, ModalHeader,\n    ModalBody, ModalFooter,\n    Form, FormGroup, Input, Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem\n        };\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n        const activeItem = {\n            ...this.state.activeItem, [name]: value\n        };\n        this.setState({ activeItem });\n    };\n\n    render() {\n        const { toggle, onSave } = this.props;\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"title\">Title</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"title\"\n                                value={this.state.activeItem.title}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo Title\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"description\">Description</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"description\"\n                                value={this.state.activeItem.description}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo description\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check for=\"completed\">\n                                <Input\n                                    type=\"checkbox\"\n                                    name=\"completed\"\n                                    checked={this.state.activeItem.completed}\n                                    onChange={this.handleChange}\n                                />\n                                Completed\n                            </Label>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n                        Save\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n    state = {\n        viewCompleted: false,\n        activeItem: {\n            title: \"\",\n            description: \"\",\n            completed: false\n        },\n        todoList: []\n    };\n\n    componentDidMount() {\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        axios\n            .get(\"/api/todos/\")\n            .then((res) => this.setState({ todoList: res.data }))\n            .catch((err) => console.log(err));\n    };\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    handleSubmit = item => {\n        this.toggle();\n        if (item.id) {\n            axios\n                .put(`/api/todos/${item.id}/`, item)\n                .then((res) => this.refreshList());\n            return;\n        }\n        axios\n            .post(\"/api/todos/\", item)\n            .then((res) => this.refreshList());\n    };\n\n    createItem = () => {\n        const item = {\n            title: \"\",\n            description: \"\",\n            completed: false\n        };\n        this.setState({\n            activeItem: item,\n            modal: !this.state.modal\n        });\n    };\n\n    displayCompleted = status => {\n        if (status) {\n            return this.setState({ viewCompleted: true });\n        }\n        return this.setState({ viewCompleted: false });\n    };\n\n    editItem = (item) => {\n        this.setState({\n            activeItem: item,\n            modal: !this.state.modal\n        });\n    };\n\n    handleDelete = (item) => {\n        axios\n            .delete(`/api/todos/${item.id}/`)\n            .then((res) => this.refreshList());\n    };\n\n    renderTabList = () => {\n        return (\n            <div className=\"nav nav-tabs my-5\">\n                <button\n                    className={\n                        this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.displayCompleted(true)}\n                >\n                    Complete\n                </button>\n                <button\n                    className={\n                        this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"\n                    }\n                    onClick={() => this.displayCompleted(false)}\n                >\n                    Incomplete\n                </button>\n            </div>\n        );\n    };\n\n    renderItems = () => {\n        const { viewCompleted } = this.state;\n        const newItems = this.state.todoList.filter(\n            item => item.completed === viewCompleted\n        );\n        return newItems.map(item => (\n            <li key={item.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                <span className={`todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`} title={item.description}>\n                    {item.title}\n                </span>\n                <span>\n                    <button\n                        className=\"btn btn-secondary mr-2\"\n                        onClick={() => this.editItem(item)}>\n                        <i className=\"fa fa-pencil\"></i>\n                    </button>\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.handleDelete(item)}>\n                        <i className=\"fa fa-remove\"></i>\n                    </button>\n                </span>\n            </li>\n        ));\n    };\n\n    render() {\n        return (\n            <main className=\"container\">\n                <h1 className=\"text-white text-uppercase text-center my-4\">Todo App</h1>\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                        <div className=\"card p-3\">\n                            <div className=\"\">\n                                <button onClick={this.createItem} className=\"btn btn-success\">Add Task</button>\n                            </div>\n\n                            {this.renderTabList()}\n\n                            <ul className=\"list-group list-group-flush border-top-0\">\n                                {this.renderItems()}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                {this.state.modal ? (\n                    <Modal\n                        activeItem={this.state.activeItem}\n                        toggle={this.toggle}\n                        onSave={this.handleSubmit}\n                    />\n                ) : null}\n            </main>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}